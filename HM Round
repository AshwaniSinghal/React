Q: Introduce yourself.
- Name
- Current Designation
- Years of experience
- My total experience with is with Walmart
- Worked in different areas of Walmart such as Financial Services, Pricing, Global Data, Manufacturing.
- Worked on Rapid Pay/Check Cashing Application, Admin part of Rapid Pay, HeartBeat, Price Investment, Data Cafe and Analytics, Global Data Portal,
  QM App, Issue Management App, MSS APP.
- Work on Requirement Gathering from business; Design Discussion with Tech Lead; Peer Code reviews.
- Work on Design discussion & documentation; Setup Tech Stack.
- Being a senior resource i do make sure the features/functionalities are going to PROD with well tested and quality code and takes responsibility of application.
- Have experience working with Geographically distributed team.
- Worked as Interim Scrum Master for almost two quarters.
- Works based out of two weeks agile sprint. (Daily Standup, Backlog grooming, Sprint planning)
- Use JIRA for tracking of work and github to maintain the source code of application.
- Tech Stack (React JS, Redux, React Router, ES6, HTML, CSS, Javascript, Webpack)
- Following CI/CD for build and deployment of Application (Looper, Concord, One-ops, WCNP)

Q. What are your achievements.
- Worked as SM for the team.
- Stepped up from my role and Lead the Merchandising UI team. Recieved Helmet Award/Most valuable team player Award from Mercants.
- Setup React App from scratch and made SSO work locally.
- Domain automation
- Developed the complex and flexible Dashboard for merchants. It's a dynamic dashboard which helps merchant to look at the data at any aggregative level.
- Worked under exterme pressure for finance team during first release and make the quality deliverables on time.
- Created reusable components in Finance and merchandising team.

Q. Most complex requirement coded so far ?
Manufacturing:
- Converted existing QM app to Mobile App using ionic cordova.

Merchandising:
- Dynamic dashboard for in-stock to get data at any aggregate level.
- Filter Drawer.

Finance:
- Responsiveness of Finance Application.
- Design of Application and Cards.

- Price investment Logic. (Aldi, Nielson, PPE, EDLP, Line items, Ladder Items)

Technical
- Decoupling of finance application from core.
- Feature Toggling
- Error Boundary in finance application.

Q Most complex reusable component written so far?
- Making finacne application responsive; Filter Bar; Dynamic generation of cards with animation; Automatic domain onboarding; Integration with MITI and SSO

Agile Principles:
- Dedicated teams
- Upfront Design
- Maintaining a Backlog
- Daily Standup for status
- Sprint planning and Retrospectives

Benefits of Agile
- Improved Quality of product since team can foucs on a small piece of requirement at once.
- Stackholders engagment at every stage (Design, Development, Testing, Post deployment feedback)
- Foucs of business value and users (provides the opportunity to beta test software after each Sprint, gaining valuable feedback early in the project)
- Early and Predecitable delivery (Since team can foucs on incremental deployment of feature)
- Allows for Change (there is an opportunity to constantly refine and reprioritize the overall product backlog)

Disadvantage of Agile
- UnPredictable Cost of entire project (Since the requirements will be delivered in small chunks)
- If there is a change in priority, it gets hard to manage the change technically sometimes.
Since we need to thik through the requirement and design ahead for a feature.
- Team can get easly distracted from actual development due to mutiple iteration of planning and grooming.
- with Remote working, team is not able to interact well and it leads to miscommunication between product, tech leads and developers.
- Lack of documentation
- if a consumer's feedback or communications are not clear, a developer might focus on the wrong areas of development

Q What are the few metrics used in Agile
- Burndown Chart
  Track the total work remaining in the project and likelihood of achieving the sprint goal. This helps your team manage its progress and 
  respond accordingly.

- Velocity Chart
  Track the amount of work completed from sprint to sprint. This helps you determine your team's velocity 
  and estimate the work your team can realistically achieve in future sprints.

- Epic Report
  Understand the progress towards completing an epic over time. This helps you manage your team's progress by tracking the remaining 
  incomplete/unestimated work.

- Can you tell me more about the project and the team ?
- what are your expectations from the candidate on this project? 
- Currently, whatâ€™s the largest problem team is facing ? 
- Are there any hesitations or concerns that you have about MY ability to complete this project?
